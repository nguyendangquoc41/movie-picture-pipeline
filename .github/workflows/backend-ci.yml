name: Backend Continuous Integration
description: CI pipeline for backend application including linting, testing, building, and pushing Docker images.

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Backend Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Python and pipenv
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.10 python3.10-venv python3.10-dev
          python3.10 -m pip install pip --upgrade
          pip install pipenv

      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install --dev

      - name: Run Linter
        working-directory: starter/backend
        run: pipenv run flake8 .

  test:
    name: Test Backend Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Python and pipenv
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.10 python3.10-venv python3.10-dev
          python3.10 -m pip install pip --upgrade
          pip install pipenv

      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install

      - name: Run Tests
        working-directory: starter/backend
        run: pipenv run test

  build:
    name: Build Backend Docker Image
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws
        
        with:
          region: ${{ secrets.AWS_REGION }}
          
      - name: Build and Push Docker Image
        working-directory: starter/backend
        run: |
          docker build -t ${{ secrets.ECR_BACKEND_REPO }}:${{ github.sha }} .
          docker push ${{ secrets.ECR_BACKEND_REPO }}:${{ github.sha }}